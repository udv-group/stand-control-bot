permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always
  SQLX_VERSION: 0.7.3
  SQLX_FEATURES: "rustls,postgres"

on:
  push:
    branches: [main]
  pull_request:
name: check

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
      redis:
        image: redis:7
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          key: sqlx-${{ env.SQLX_VERSION }}
      - name: Install sqlx-cli
        run:
            cargo install sqlx-cli
            --version=${{ env.SQLX_VERSION }}
            --features ${{ env.SQLX_FEATURES }}
            --no-default-features
            --locked
      - name: Migrate database
        run: |
          sudo apt-get install libpq-dev -y
          SKIP_START=true ./scripts/init_db.sh
      - name: Check sqlx-data.json is up-to-date
        run: |
          cargo sqlx prepare --workspace --check
      - name: Run tests
        run: cargo test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Enforce formatting
        run: cargo fmt --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    # services:
    #   postgres:
    #     image: postgres:14
    #     env:
    #       POSTGRES_USER: postgres
    #       POSTGRES_PASSWORD: password
    #       POSTGRES_DB: postgres
    #     ports:
    #       - 5432:5432
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - uses: Swatinem/rust-cache@v2
        with:
          key: sqlx-${{ env.SQLX_VERSION }}
      # - name: Install sqlx-cli
      #   run:
      #     cargo install sqlx-cli
      #       --version=${{ env.SQLX_VERSION }}
      #       --features ${{ env.SQLX_FEATURES }}
      #       --no-default-features
      #       --locked
      # - name: Migrate database
      #   run: |
      #     sudo apt-get install libpq-dev -y
      #     SKIP_START=true ./scripts/init_db.sh
      - name: Linting
        run: cargo clippy -- -D warnings
